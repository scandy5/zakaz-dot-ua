{"version":3,"sources":["components/Header/Header.jsx","components/Sidebar/Sidebar.jsx","components/ProductItem/ProductItem.jsx","components/Products/Products.jsx","AppBackend.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","Sidebar","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","props","categories","map","category","title","React","Component","ProductItem","call","_this$props","name","price","weight","Products","ProductItem_ProductItem_ProductItem","AppBackend","baseUrl","_ref","objectDestructuringEmpty","fetch","concat","then","response","json","_ref2","App","_this","getCategories","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","backend","getCategory","sent","setState","stop","getProducts","_callee2","products","_context2","state","selectedCategory","Header_Header_Header","Sidebar_Sidebar_Sidebar","Products_Products_Products","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ee06c795.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Header.css';\r\n\r\nexport const Header = () => {\r\n\r\n\treturn (\r\n\t\t<header className=\"header\">\r\n\t\t\t<div className=\"header__container\">\r\n\t\t\t\t<div className=\"header__logo\"> </div>\r\n\t\t\t\t<div className=\"header__cart\">\r\n\t\t\t\t\t<div className=\"header__cart-img\" />\r\n\t\t\t\t\t<div className=\"header__counter\">\r\n\t\t\t\t\t\t<span className=\"header__quantity\">123</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<span className=\"header__price\">1200.00</span>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t</header>\r\n\t)\r\n}","import React from 'react';\r\nimport './Sidebar.css';\r\n\r\nexport class Sidebar extends React.Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<section className=\"sidebar\">\r\n\t\t\t\t<h2 className=\"sidebar__title\">Товари</h2>\r\n\t\t\t\t<div className=\"sidebar__category-container\">\r\n\t\t\t\t\t{this.props.categories.map((category => {\r\n\t\t\t\t\t\treturn <p className=\"sidebar__category\">{category.title}</p>\r\n\t\t\t\t\t}))}\r\n\t\t\t\t</div>\r\n\t\t\t</section>\r\n\t\t)\r\n\t}\r\n\r\n}\r\n","import React from 'react';\r\nimport './ProductItem.css';\r\n\r\nexport class ProductItem extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { name, price, weight } = this.props;\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"products__item\">\r\n\t\t\t\t<div className=\"products__picture\" />\r\n\t\t\t\t<span className=\"products__price\">39.40 <span>грн</span></span>\r\n\t\t\t\t<p className=\"products__name\">\r\n\t\t\t\t\tsome title some title some title {name}\r\n\t\t\t\t</p>\r\n\t\t\t\t<div className=\"products__weight\">400г</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}","import React from 'react';\r\nimport { ProductItem } from '../ProductItem';\r\nimport './Products.css';\r\n\r\nexport class Products extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t}\r\n\trender() {\r\n\t\tconst { title } = this.props;\r\n\r\n\t\treturn (\r\n\t\t\t<section className=\"products\">\r\n\t\t\t\t<div className=\"products__container\">\r\n\t\t\t\t\t<h1 className=\"products__title\">{title}</h1>\r\n\t\t\t\t\t<div className=\"products__items\">\r\n\t\t\t\t\t{/* {this.props.products.map((product) => {\r\n\t\t\t\t\t\t\treturn <ProductItem title={product.name} key={product.name} />\r\n\t\t\t\t\t\t})} */}\r\n\t\t\t\t\t\t<ProductItem />\r\n\t\t\t\t\t\t<ProductItem />\r\n\t\t\t\t\t\t<ProductItem />\r\n\t\t\t\t\t\t<ProductItem />\r\n\t\t\t\t\t\t<ProductItem />\r\n\t\t\t\t\t\t<ProductItem />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</section>\r\n\t\t)\r\n\t}\r\n\r\n}","export class AppBackend {\r\n\tconstructor() {\r\n\t\tthis.baseUrl = 'https://staging-stores-api.zakaz.ua/stores/default/categories/';\r\n\t}\r\n\r\n\tgetCategory({}) {\r\n\t\treturn fetch(`${this.baseUrl}`)\r\n\t\t\t.then((response) => response.json());\r\n\t}\r\n\r\n\tgetProducts({}) {\r\n\t\treturn fetch(`${this.baseUrl}bakery/products/`)\r\n\t\t\t.then((response) => response.json());\r\n\t}\r\n}\r\n\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport { Header } from './components/Header';\nimport { Sidebar } from './components/Sidebar';\nimport { Products } from './components/Products';\nimport { AppBackend } from './AppBackend';\n\n\nclass App extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tcategories: [],\n\t\t\tproducts: [],\n\t\t\tselectedCategory: '',\n\t\t\t// cart: {}\n\t\t}\n\n\t\tthis.backend = new AppBackend();\n\t}\n\n\tasync componentDidMount() {\n\t\tthis.getCategories();\n\t\tthis.getProducts();\n\t}\n\n\tgetCategories = async () => {\n\t\tconst categories = await this.backend.getCategory({})\n\n\t\tthis.setState({ categories });\n\t}\n\n\tgetProducts = async () => {\n\t\tconst products = await this.backend.getProducts({})\n\n\t\tthis.setState({ products })\n\t}\n\n\t// onCategoryChange(selectedCategory) {\n\t// \tthis.setState({\n\t// \t\tselectedCategory\n\t// \t}) //() => {\n\t// \t// \t// TODO load new products\n\t// \t// });\n\t// }\n\n\trender() {\n\t\t// const {}\n\n\t\treturn (\n\t\t\t<div className=\"container\">\n\t\t\t\t<Header />\n\t\t\t\t<main className=\"main\">\n\t\t\t\t\t<Sidebar categories={this.state.categories} /*\n\t\t\t\t\t\tselected={this.state.selectedCategory}\n\t\t\t\t\t\tonChange={this.onCategoryChange} *//>\n\t\t\t\t\t<Products products={this.state.products} />\n\t\t\t\t</main>\n\t\t\t</div>\n\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}