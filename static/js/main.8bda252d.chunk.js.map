{"version":3,"sources":["components/Header/Header.jsx","components/Sidebar/Sidebar.jsx","components/ProductItem/ProductItem.jsx","components/Products/Products.jsx","AppBackend.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","Sidebar","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","onCategoryChange","props","categories","filter","category","title","map","data-id","id","onClick","React","Component","ProductItem","_this$props","name","price","weight","imgUrl","onMouseOver","onHoverItem","src","alt","Products","products","product","ProductItem_ProductItem_ProductItem","gallery","s150x150","slug","AppBackend","baseUrl","fetch","concat","then","response","json","_ref","selectedCategory","console","log","App","_this","call","getCategories","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","backend","getCategory","sent","setState","stop","getProducts","_callee2","_context2","state","results","target","dataset","categoryTitle","Header_Header_Header","Sidebar_Sidebar_Sidebar","selected","Products_Products_Products","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8bda252d.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Header.css';\r\n\r\nexport const Header = () => {\r\n\r\n\treturn (\r\n\t\t<header className=\"header\">\r\n\t\t\t<div className=\"header__container\">\r\n\t\t\t\t<div className=\"header__logo\"> </div>\r\n\t\t\t\t<div className=\"header__cart\">\r\n\t\t\t\t\t<div className=\"header__cart-img\" />\r\n\t\t\t\t\t<div className=\"header__counter\">\r\n\t\t\t\t\t\t<span className=\"header__quantity\">123</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<span className=\"header__price\">1200.00</span>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t</header>\r\n\t)\r\n}","import React from 'react';\r\nimport './Sidebar.css';\r\n\r\nexport class Sidebar extends React.Component {\r\n\trender() {\r\n\t\tconst { onCategoryChange } = this.props;\r\n\r\n\t\treturn (\r\n\t\t\t<section className=\"sidebar\">\r\n\t\t\t\t<h2 className=\"sidebar__title\">Товари</h2>\r\n\t\t\t\t<div className=\"sidebar__category-container\">\r\n\t\t\t\t\t{this.props.categories\r\n\t\t\t\t\t\t.filter(category => category.title === 'Пекарня')\r\n\t\t\t\t\t\t.map(category => <p className=\"sidebar__category sidebar__category_active\">{category.title}</p>)}\r\n\t\t\t\t\t{this.props.categories\r\n\t\t\t\t\t\t.filter(category => category.title !== 'Пекарня')\r\n\t\t\t\t\t\t.map(category => <p className=\"sidebar__category\" data-id={category.id} onClick={onCategoryChange}>{category.title}</p>)}\r\n\t\t\t\t</div>\r\n\t\t\t</section>\r\n\t\t)\r\n\t}\r\n}\r\n","import React from 'react';\r\nimport './ProductItem.css';\r\nimport * as classNames from 'classnames';\r\n\r\nexport class ProductItem extends React.Component {\r\n\trender() {\r\n\t\tconst { name, price, weight, imgUrl } = this.props;\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"products__item\" onMouseOver={this.onHoverItem}>\r\n\t\t\t\t<button className=\"products__button\">\r\n\t\t\t\t\tДодати\r\n\t\t\t\t\t<div className=\"products__cart-img\" />\r\n\t\t\t\t</button>\r\n\t\t\t\t<div className=\"products__picture\">\r\n\t\t\t\t\t<img src={imgUrl} alt={name} className=\"product__img\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t<span className=\"products__price\">{price}<span> грн</span></span>\r\n\t\t\t\t<p className=\"products__name\">\r\n\t\t\t\t\t{name}\r\n\t\t\t\t</p>\r\n\t\t\t\t<div className=\"products__weight\">{weight} г</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}","import React from 'react';\r\nimport { ProductItem } from '../ProductItem';\r\nimport './Products.css';\r\n\r\nexport class Products extends React.Component {\r\n\trender() {\r\n\t\tconst { title } = this.props;\r\n\r\n\t\treturn (\r\n\t\t\t<section className=\"products\">\r\n\t\t\t\t<div className=\"products__container\">\r\n\t\t\t\t\t<h1 className=\"products__title\">{title}</h1>\r\n\t\t\t\t\t<div className=\"products__items\">\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tthis.props.products.map((product) => {\r\n\t\t\t\t\t\t\t\treturn <ProductItem\r\n\t\t\t\t\t\t\t\t\tname={product.title}\r\n\t\t\t\t\t\t\t\t\tprice={product.price}\r\n\t\t\t\t\t\t\t\t\tweight={product.weight}\r\n\t\t\t\t\t\t\t\t\timgUrl={product.gallery[0].s150x150}\r\n\t\t\t\t\t\t\t\t\tkey={product.slug} />\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</section>\r\n\t\t)\r\n\t}\r\n\r\n}","export class AppBackend {\r\n\tconstructor() {\r\n\t\tthis.baseUrl = 'https://staging-stores-api.zakaz.ua/stores/default/categories/';\r\n\t}\r\n\r\n\tgetCategory() {\r\n\t\treturn fetch(`${this.baseUrl}`)\r\n\t\t\t.then((response) => response.json());\r\n\t}\r\n\r\n\tgetProducts({selectedCategory}) {\r\n\t\tconsole.log(selectedCategory)\r\n\t\treturn fetch(`${this.baseUrl}${selectedCategory}/products/`)\r\n\t\t\t.then((response) => response.json());\r\n\t}\r\n}\r\n\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport { Header } from './components/Header';\nimport { Sidebar } from './components/Sidebar';\nimport { Products } from './components/Products';\nimport { AppBackend } from './AppBackend';\n\n\nclass App extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tcategories: [],\n\t\t\tproducts: [],\n\t\t\tselectedCategory: ''\n\t\t};\n\n\t\tthis.backend = new AppBackend();\n\t}\n\n\tasync componentDidMount() {\n\t\tconst categories = await this.backend.getCategory();\n\n\t\tthis.setState({\n\t\t\tselectedCategory: categories[0],\n\t\t\tcategories\n\t\t});\n\n\t\tconsole.log(this.state.selectedCategory.id);\n\t\t\n\t\tthis.getProducts();\n\t}\n\n\tgetCategories = async () => {\n\t\tconst categories = await this.backend.getCategory();\n\n\t\tthis.setState({ categories });\n\t}\n\n\tgetProducts = async () => {\n\t\tconst products = await this.backend.getProducts({ selectedCategory: this.state.selectedCategory.id });\n\n\t\tconsole.log(this.state.selectedCategory.id);\n\t\t\n\t\tthis.setState({\n\t\t\tproducts: products.results\n\t\t});\n\t}\n\n\tonCategoryChange = (selectedCategory) => {\n\t\tselectedCategory = selectedCategory.target.dataset.id;\n\n\t\tconsole.log(selectedCategory);\n\t\t\n\t\tthis.setState({ selectedCategory }, () => {\n\t\t\tthis.getProducts();\n\t\t});\n\t}\n\n\trender() {\n\t\tconst categoryTitle = this.state.categories.filter(category => category.title === 'Пекарня').map(category => category.title)\n\n\t\treturn (\n\t\t\t<div className=\"container\">\n\t\t\t\t<Header />\n\t\t\t\t<main className=\"main\">\n\t\t\t\t\t<Sidebar categories={this.state.categories}\n\t\t\t\t\t\tselected={this.state.selectedCategory}\n\t\t\t\t\t\tonCategoryChange={this.onCategoryChange} />\n\t\t\t\t\t<Products products={this.state.products} title={categoryTitle} />\n\t\t\t\t</main>\n\t\t\t</div>\n\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}